{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2024-07-18T15:57:18.117Z",
    "end": "2024-07-18T15:57:18.669Z",
    "duration": 552,
    "testsRegistered": 11,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 10,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "f07ab61a-5130-453b-8600-3315833dac23",
      "title": "",
      "fullFile": "cypress/e2e/Homework_18.1/registration.cy.js",
      "file": "cypress/e2e/Homework_18.1/registration.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ffe984d4-672e-4943-a9ef-c7036aaba531",
          "title": "registration flow",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "registration process",
              "fullTitle": "registration flow registration process",
              "timedOut": null,
              "duration": 487,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const nameLength = 10;\nconst nameMock = generateChars.getRandomName(nameLength);\nconst emailMock = generateChars.getRandomEmail(nameLength);\nconst passwordMock = generateChars.getRandomPassword(nameLength);\ncy.get(_registrationSelectors.registrationSelectors.name).type(nameMock);\ncy.get(_registrationSelectors.registrationSelectors.lastName).type(nameMock);\ncy.get(_registrationSelectors.registrationSelectors.email).type(emailMock);\ncy.get(_registrationSelectors.registrationSelectors.password).type(passwordMock, {\n  sensitive: true,\n  parseSpecialCharSequences: false\n});\ncy.get(_registrationSelectors.registrationSelectors.repeatPassword).type(passwordMock, {\n  sensitive: true,\n  parseSpecialCharSequences: false\n});\ncy.get(_registrationSelectors.registrationSelectors.submit).click();",
              "err": {
                "message": "CypressError: `cy.visit()` failed trying to load:\n\nhttps://qauto2.forstudy.space/\n\nThe response we received from your web server was:\n\n  > 401: Unauthorized\n\nThis was considered a failure because the status code was not `2xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `registration flow`",
                "estack": "CypressError: `cy.visit()` failed trying to load:\n\nhttps://qauto2.forstudy.space/\n\nThe response we received from your web server was:\n\n  > 401: Unauthorized\n\nThis was considered a failure because the status code was not `2xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `registration flow`\n    at <unknown> (https://qauto2.forstudy.space/__cypress/runner/cypress_runner.js:131491:76)\n    at visitFailedByErr (https://qauto2.forstudy.space/__cypress/runner/cypress_runner.js:130906:12)\n    at <unknown> (https://qauto2.forstudy.space/__cypress/runner/cypress_runner.js:131474:13)\n    at tryCatcher (https://qauto2.forstudy.space/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://qauto2.forstudy.space/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://qauto2.forstudy.space/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://qauto2.forstudy.space/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://qauto2.forstudy.space/__cypress/runner/cypress_runner.js:1697:18)\n    at _drainQueueStep (https://qauto2.forstudy.space/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (https://qauto2.forstudy.space/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (https://qauto2.forstudy.space/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (https://qauto2.forstudy.space/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://cypress_hillel/./cypress/e2e/Homework_18.1/registration.cy.js:9:11)",
                "diff": null
              },
              "uuid": "f6b410a3-8b4f-4380-95e9-350eee792bec",
              "parentUUID": "ffe984d4-672e-4943-a9ef-c7036aaba531",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "error while checking name",
              "fullTitle": "registration flow error while checking name",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(_registrationSelectors.registrationSelectors.name).type('1');\ncy.get(_registrationSelectors.registrationSelectors.lastName).focus();\ncy.get(_registrationSelectors.registrationSelectors.invalidFeedback).contains(_errors.errors.invalidName).should('be.visible');\ncy.get(_registrationSelectors.registrationSelectors.invalidFeedback).contains(_errors.errors.nameLength).should('be.visible');",
              "err": {},
              "uuid": "533d0969-b145-4fd2-b7be-c1c947417873",
              "parentUUID": "ffe984d4-672e-4943-a9ef-c7036aaba531",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "error while checking last name",
              "fullTitle": "registration flow error while checking last name",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(_registrationSelectors.registrationSelectors.lastName).type('1');\ncy.get(_registrationSelectors.registrationSelectors.name).focus();\ncy.get(_registrationSelectors.registrationSelectors.invalidFeedback).contains(_errors.errors.lastNameInvalid).should('be.visible');",
              "err": {},
              "uuid": "5732b4a0-5dae-4696-9a1b-8f3e299e5eb5",
              "parentUUID": "ffe984d4-672e-4943-a9ef-c7036aaba531",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "error while name is empty",
              "fullTitle": "registration flow error while name is empty",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(_registrationSelectors.registrationSelectors.name).focus();\ncy.get(_registrationSelectors.registrationSelectors.lastName).focus();\ncy.get(_registrationSelectors.registrationSelectors.invalidFeedbackP).contains(_errors.errors.nameRequired).should('be.visible');",
              "err": {},
              "uuid": "9d4603d6-f787-45fe-97d7-5e6543b3fda8",
              "parentUUID": "ffe984d4-672e-4943-a9ef-c7036aaba531",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "error while last name is empty",
              "fullTitle": "registration flow error while last name is empty",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(_registrationSelectors.registrationSelectors.lastName).focus();\ncy.get(_registrationSelectors.registrationSelectors.name).focus();\ncy.get(_registrationSelectors.registrationSelectors.invalidFeedbackP).contains(_errors.errors.lastNameRequired).should('be.visible');\ncy.get(_registrationSelectors.registrationSelectors.submit).should('be.disabled');",
              "err": {},
              "uuid": "65e447e4-cfbc-4322-930e-e18927526aca",
              "parentUUID": "ffe984d4-672e-4943-a9ef-c7036aaba531",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "error while email is invalid",
              "fullTitle": "registration flow error while email is invalid",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nameLength = 10;\nconst nameMock = generateChars.getRandomName(nameLength);\nconst invalidEmail = 'invalidEmail';\nconst passwordMock = generateChars.getRandomPassword(nameLength);\ncy.get(_registrationSelectors.registrationSelectors.name).type(nameMock);\ncy.get(_registrationSelectors.registrationSelectors.lastName).type(nameMock);\ncy.get(_registrationSelectors.registrationSelectors.email).type(invalidEmail);\ncy.get(_registrationSelectors.registrationSelectors.password).type(passwordMock, {\n  sensitive: true,\n  parseSpecialCharSequences: false\n});\ncy.get(_registrationSelectors.registrationSelectors.repeatPassword).type(passwordMock, {\n  sensitive: true,\n  parseSpecialCharSequences: false\n});\ncy.get(_registrationSelectors.registrationSelectors.submit).click({\n  force: true\n});\ncy.get(_registrationSelectors.registrationSelectors.invalidFeedbackP).contains(_errors.errors.emailIsIncorrect).should('be.visible');",
              "err": {},
              "uuid": "6f0dc8a5-9987-4bf9-ad08-934549329558",
              "parentUUID": "ffe984d4-672e-4943-a9ef-c7036aaba531",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "error while email is empty",
              "fullTitle": "registration flow error while email is empty",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(_registrationSelectors.registrationSelectors.email).focus();\ncy.get(_registrationSelectors.registrationSelectors.password).focus();\ncy.get(_registrationSelectors.registrationSelectors.invalidFeedbackP).contains(_errors.errors.emailRequired).should('be.visible');\ncy.get(_registrationSelectors.registrationSelectors.submit).click({\n  force: true\n});",
              "err": {},
              "uuid": "2868a376-aa95-49fc-936c-8a3b7d21f0e6",
              "parentUUID": "ffe984d4-672e-4943-a9ef-c7036aaba531",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "error while password is invalid",
              "fullTitle": "registration flow error while password is invalid",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nameLength = 10;\nconst nameMock = generateChars.getRandomName(nameLength);\nconst emailMock = generateChars.getRandomEmail(nameLength);\nconst invalidPassword = 'short1';\ncy.get(_registrationSelectors.registrationSelectors.name).type(nameMock);\ncy.get(_registrationSelectors.registrationSelectors.lastName).type(nameMock);\ncy.get(_registrationSelectors.registrationSelectors.email).type(emailMock);\ncy.get(_registrationSelectors.registrationSelectors.password).type(invalidPassword, {\n  sensitive: true,\n  parseSpecialCharSequences: false\n});\ncy.get(_registrationSelectors.registrationSelectors.repeatPassword).type(invalidPassword, {\n  sensitive: true,\n  parseSpecialCharSequences: false\n});\ncy.get(_registrationSelectors.registrationSelectors.submit).click({\n  force: true\n});\ncy.get(_registrationSelectors.registrationSelectors.invalidFeedbackP).contains(_errors.errors.passwordInvalid).should('be.visible');",
              "err": {},
              "uuid": "ded97f6f-b002-4d3b-aab8-4b0d44959fce",
              "parentUUID": "ffe984d4-672e-4943-a9ef-c7036aaba531",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "error while password is empty",
              "fullTitle": "registration flow error while password is empty",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(_registrationSelectors.registrationSelectors.password).focus();\ncy.get(_registrationSelectors.registrationSelectors.repeatPassword).focus();\ncy.get(_registrationSelectors.registrationSelectors.invalidFeedbackP).contains(_errors.errors.passwordRequired).should('be.visible');\ncy.get(_registrationSelectors.registrationSelectors.submit).click({\n  force: true\n});",
              "err": {},
              "uuid": "3afd9ef4-e76b-43fa-bb01-f991e207b04a",
              "parentUUID": "ffe984d4-672e-4943-a9ef-c7036aaba531",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "error while passwords do not match",
              "fullTitle": "registration flow error while passwords do not match",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nameLength = 10;\nconst nameMock = generateChars.getRandomName(nameLength);\nconst emailMock = generateChars.getRandomEmail(nameLength);\nconst passwordMock = generateChars.getRandomPassword(nameLength);\ncy.get(_registrationSelectors.registrationSelectors.name).type(nameMock);\ncy.get(_registrationSelectors.registrationSelectors.lastName).type(nameMock);\ncy.get(_registrationSelectors.registrationSelectors.email).type(emailMock);\ncy.get(_registrationSelectors.registrationSelectors.password).type(passwordMock, {\n  sensitive: true,\n  parseSpecialCharSequences: false\n});\ncy.get(_registrationSelectors.registrationSelectors.repeatPassword).type('DifferentPassword1!', {\n  sensitive: true,\n  parseSpecialCharSequences: false\n});\ncy.get(_registrationSelectors.registrationSelectors.submit).click({\n  force: true\n});\ncy.get(_registrationSelectors.registrationSelectors.invalidFeedbackP).contains(_errors.errors.passwordInvalid).should('be.visible');",
              "err": {},
              "uuid": "4358886b-01d8-4f15-beb8-3230abdf76b0",
              "parentUUID": "ffe984d4-672e-4943-a9ef-c7036aaba531",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "error while re-enter password is empty",
              "fullTitle": "registration flow error while re-enter password is empty",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nameLength = 10;\nconst nameMock = generateChars.getRandomName(nameLength);\nconst emailMock = generateChars.getRandomEmail(nameLength);\nconst passwordMock = generateChars.getRandomPassword(nameLength);\ncy.get(_registrationSelectors.registrationSelectors.name).type(nameMock);\ncy.get(_registrationSelectors.registrationSelectors.lastName).type(nameMock);\ncy.get(_registrationSelectors.registrationSelectors.email).type(emailMock);\ncy.get(_registrationSelectors.registrationSelectors.password).type(passwordMock, {\n  sensitive: true,\n  parseSpecialCharSequences: false\n});\ncy.get(_registrationSelectors.registrationSelectors.repeatPassword).focus().blur();\ncy.get(_registrationSelectors.registrationSelectors.submit).click({\n  force: true\n});\ncy.get(_registrationSelectors.registrationSelectors.invalidFeedbackP).contains(_errors.errors.passwordMatchRequired).should('be.visible');",
              "err": {},
              "uuid": "02f7ad8e-d7ca-46f7-87c3-ee24eb12fdbb",
              "parentUUID": "ffe984d4-672e-4943-a9ef-c7036aaba531",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f6b410a3-8b4f-4380-95e9-350eee792bec"
          ],
          "pending": [],
          "skipped": [
            "533d0969-b145-4fd2-b7be-c1c947417873",
            "5732b4a0-5dae-4696-9a1b-8f3e299e5eb5",
            "9d4603d6-f787-45fe-97d7-5e6543b3fda8",
            "65e447e4-cfbc-4322-930e-e18927526aca",
            "6f0dc8a5-9987-4bf9-ad08-934549329558",
            "2868a376-aa95-49fc-936c-8a3b7d21f0e6",
            "ded97f6f-b002-4d3b-aab8-4b0d44959fce",
            "3afd9ef4-e76b-43fa-bb01-f991e207b04a",
            "4358886b-01d8-4f15-beb8-3230abdf76b0",
            "02f7ad8e-d7ca-46f7-87c3-ee24eb12fdbb"
          ],
          "duration": 487,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}